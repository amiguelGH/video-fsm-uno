{"ast":null,"code":"import { __assign, __values, __spread, __read, __rest } from './_virtual/_tslib.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { mapValues, isArray, flatten, keys, toArray, toStateValue, isString, getEventType, matchesState, path, evaluateGuard, mapContext, toSCXMLEvent, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, isFunction } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, has, getChildren, getValue, isLeafNode } from './stateUtils.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent, raise as raise$1, send as send$1 } from './actionTypes.js';\nimport { done, start, raise, stop, toActionObjects, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\" + event + \"'\";\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \" + eventText + \" on state '\" + stateNode.id + \"' are unreachable. \" + \"Make sure that the default transition is the last one defined.\");\n};\nvar StateNode = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  context // TODO: this is unsafe, but we're removing it in v5 anyway\n  ) {\n    var _this = this;\n    if (context === void 0) {\n      context = undefined;\n    }\n    var _a;\n    this.config = config;\n    this.context = context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = this.options._parent;\n    this.key = this.config.key || this.options._key || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spread([this.machine.key], this.path).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \" + (this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\" + this.type + \"'`\") + \" in the config for state node '\" + this.id + \"' instead.\");\n    }\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n      var stateNode = new StateNode(stateConfig, {\n        _parent: _this,\n        _key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n    function dfs(stateNode) {\n      var e_1, _a;\n      stateNode.order = order++;\n      try {\n        for (var _b = __values(getChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n      if (isMachine(invokeConfig)) {\n        _this.machine.options.services = __assign((_a = {}, _a[invokeConfig.id] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeConfig.id,\n          id: invokeConfig.id\n        });\n      } else if (isString(invokeConfig.src)) {\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeConfig.id || invokeConfig.src,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeSrc = _this.id + \":invocation[\" + i + \"]\"; // TODO: util function\n\n        _this.machine.options.services = __assign((_b = {}, _b[invokeSrc] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSrc\n        }, invokeConfig), {\n          src: invokeSrc\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSource.type\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n  StateNode.prototype.withConfig = function (options, context) {\n    if (context === void 0) {\n      context = this.context;\n    }\n    var _a = this.options,\n      actions = _a.actions,\n      activities = _a.activities,\n      guards = _a.guards,\n      services = _a.services,\n      delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n    var afterConfig = this.config.after;\n    if (!afterConfig) {\n      return [];\n    }\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? _this.id + \":delay[\" + i + \"]\" : delay;\n      var eventType = after(delayRef, _this.id);\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n      _this.onExit.push(cancel(eventType));\n      return eventType;\n    };\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n    var _this = this;\n    if (!state) {\n      return [];\n    }\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this.states[stateValue]];\n    }\n    var subStateKeys = keys(stateValue);\n    var subStateNodes = subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey);\n    });\n    return subStateNodes.concat(subStateKeys.reduce(function (allSubStateNodes, subStateKey) {\n      var subStateNode = _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n      return allSubStateNodes.concat(subStateNode);\n    }, []));\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n  StateNode.prototype.resolveState = function (state) {\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(state.value)));\n    return new State(__assign(__assign({}, state), {\n      value: this.resolve(state.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this)\n    }));\n  };\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n    return next;\n  };\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n    return next;\n  };\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n    var transitionMap = {};\n    try {\n      for (var _b = __values(keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n        if (!subStateValue) {\n          continue;\n        }\n        var subStateNode = this.getStateNode(subStateKey);\n        var next = subStateNode._transition(subStateValue, state, _event);\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    var stateTransitions = keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n    if (keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n    var _this = this;\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n          stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ?\n        // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) :\n        // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\" + (cond.name || cond.type) + \"' in transition for event '\" + eventName + \"' in state node '\" + this.id + \"':\\n\" + err.message);\n        }\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n          actions.push.apply(actions, __spread(candidate.actions));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    if (!selectedTransition) {\n      return undefined;\n    }\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = isInternal ? [] : flatten(allNextStateNodes.map(function (n) {\n      return _this.nodesFromChild(n);\n    }));\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n  StateNode.prototype.nodesFromChild = function (childStateNode) {\n    if (childStateNode.escapes(this)) {\n      return [];\n    }\n    var nodes = [];\n    var marker = childStateNode;\n    while (marker && marker !== this) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n    nodes.push(this); // inclusive\n\n    return nodes;\n  };\n  /**\r\n   * Whether the given state node \"escapes\" this state node. If the `stateNode` is equal to or the parent of\r\n   * this state node, it does not escape.\r\n   */\n\n  StateNode.prototype.escapes = function (stateNode) {\n    if (this === stateNode) {\n      return false;\n    }\n    var parent = this.parent;\n    while (parent) {\n      if (parent === stateNode) {\n        return false;\n      }\n      parent = parent.parent;\n    }\n    return true;\n  };\n  StateNode.prototype.getActions = function (transition, currentContext, _event, prevState) {\n    var e_4, _a, e_5, _b;\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n    var resolvedConfig = transition.configuration.length ? getConfiguration(prevConfig, transition.configuration) : prevConfig;\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n        if (!has(prevConfig, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n    if (!transition.source) {\n      transition.exitSet = []; // Ensure that root StateNode (machine) is entered\n\n      transition.entrySet.push(this);\n    }\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n      if (sn.type !== 'final') {\n        return events;\n      }\n      var parent = sn.parent;\n      if (!parent.parent) {\n        return events;\n      }\n      events.push(done(sn.id, sn.doneData),\n      // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n    var _c = __read([flatten(Array.from(entryStates).map(function (stateNode) {\n        return __spread(stateNode.activities.map(function (activity) {\n          return start(activity);\n        }), stateNode.onEntry);\n      })).concat(doneEvents.map(raise)), flatten(Array.from(exitStates).map(function (stateNode) {\n        return __spread(stateNode.onExit, stateNode.activities.map(function (activity) {\n          return stop(activity);\n        }));\n      }))], 2),\n      entryActions = _c[0],\n      exitActions = _c[1];\n    var actions = toActionObjects(exitActions.concat(transition.actions).concat(entryActions), this.machine.options.actions);\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n  StateNode.prototype.transition = function (state, event, context) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n    var _event = toSCXMLEvent(event);\n    var currentState;\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\" + WILDCARD + \"')\");\n    }\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\" + this.id + \"' does not accept event '\" + _event.name + \"'\");\n      }\n    }\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spread(resolvedConfig);\n    return this.resolveTransition(stateTransition, currentState, _event);\n  };\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent) {\n    var _a;\n    var currentActions = state.actions;\n    state = this.transition(state, _event); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n    (_a = state.actions).unshift.apply(_a, __spread(currentActions));\n    return state;\n  };\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, _event, context) {\n    var e_6, _a;\n    var _this = this;\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n    if (context === void 0) {\n      context = this.machine.context;\n    }\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var currentContext = currentState ? currentState.context : context;\n    var actions = this.getActions(stateTransition, currentContext, _event, currentState);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n    try {\n      for (var actions_1 = __values(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {\n        var action = actions_1_1.value;\n        if (action.type === start$1) {\n          activities[action.activity.id || action.activity.type] = action;\n        } else if (action.type === stop$1) {\n          activities[action.activity.id || action.activity.type] = false;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n    var _b = __read(resolveActions(this, currentState, currentContext, _event, actions), 2),\n      resolvedActions = _b[0],\n      updatedContext = _b[1];\n    var _c = __read(partition(resolvedActions, function (action) {\n        return action.type === raise$1 || action.type === send$1 && action.to === SpecialTargets.Internal;\n      }), 2),\n      raisedEvents = _c[0],\n      nonRaisedActions = _c[1];\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var resolvedConfiguration = resolvedStateValue ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var meta = resolvedConfiguration.reduce(function (acc, stateNode) {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n      return acc;\n    }, {});\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      meta: resolvedStateValue ? meta : currentState ? currentState.meta : undefined,\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: currentState === null || currentState === void 0 ? void 0 : currentState.tags\n    });\n    var didUpdateContext = currentContext !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n    if (history) {\n      delete history.history;\n    }\n    if (!resolvedStateValue) {\n      return nextState;\n    }\n    var maybeNextState = nextState;\n    if (!isDone) {\n      var isTransient = this._transient || configuration.some(function (stateNode) {\n        return stateNode._transient;\n      });\n      if (isTransient) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event);\n      }\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event);\n      }\n    } // Detect if state changed\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    maybeNextState.tags = new Set(flatten(maybeNextState.configuration.map(function (sn) {\n      return sn.tags;\n    })));\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\" + stateKey + \"' from '\" + this.id + \"'; no child states exist.\");\n    }\n    var result = this.states[stateKey];\n    if (!result) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n    var stateNode = this.machine.idMap[resolvedStateId];\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\" + resolvedStateId + \"' does not exist on machine '\" + this.id + \"'\");\n    }\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n      if (!key.length) {\n        break;\n      }\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n    var _this = this;\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n          return stateValue;\n        }\n        if (!keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\" + stateIdentifier + \"'\");\n      }\n      return stateNode.path;\n    }\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n      var initialStateValue;\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\" + this.initial + \"' not found on '\" + this.key + \"'\");\n        }\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, undefined, context);\n  };\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n      var initialStateValue = this.initialStateValue;\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\" + this.id + \"'.\");\n      }\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\" + this.id + \"' has no initial state.\");\n        }\n        return [this];\n      }\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n    var _a = __read(relativePath),\n      stateKey = _a[0],\n      childStatePath = _a.slice(1);\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\" + stateKey + \"' from node with no states\");\n    }\n    var childStateNode = this.getStateNode(stateKey);\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!keys(this.states).length) {\n      return undefined;\n    }\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n    if (this.type !== 'history') {\n      return [this];\n    }\n    var parent = this.parent;\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n      var childStateIds = flatten(keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_7, _a, e_8, _b;\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n      if (states) {\n        try {\n          for (var _c = __values(keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n            if (state.states) {\n              try {\n                for (var _e = (e_8 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\" + event_1);\n                }\n              } catch (e_8_1) {\n                e_8 = {\n                  error: e_8_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_8) throw e_8.error;\n                }\n              }\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\" + _this.id + \"':\\n\" + err.message);\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\" + t.id;\n          }) : undefined,\n          source: \"#\" + _this.id\n        });\n      }\n    });\n    return transition;\n  };\n  StateNode.prototype.formatTransitions = function () {\n    var e_9, _a;\n    var _this = this;\n    var onConfig;\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n        _c = WILDCARD,\n        _d = _b[_c],\n        wildcardConfigs = _d === void 0 ? [] : _d,\n        strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n      onConfig = flatten(keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + (\"Please check the `on` configuration for \\\"#\" + _this.id + \"\\\".\"));\n        }\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\" + this.id + \"\\\".\");\n    }\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spread(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)));\n      }\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spread(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)));\n      }\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spread(doneConfig, invokeConfig, onConfig, eventlessConfig).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n    return formattedTransitions;\n  };\n  return StateNode;\n}();\nexport { StateNode };","map":{"version":3,"names":["__assign","__values","__spread","__read","__rest","STATE_DELIMITER","IS_PRODUCTION","mapValues","isArray","flatten","keys","toArray","toStateValue","isString","getEventType","matchesState","path","evaluateGuard","mapContext","toSCXMLEvent","pathToStateValue","isBuiltInEvent","partition","updateHistoryValue","toStatePath","mapFilterValues","warn","toStatePaths","nestedPath","normalizeTarget","toGuard","toTransitionConfigArray","isMachine","isFunction","SpecialTargets","getAllStateNodes","getConfiguration","isInFinalState","has","getChildren","getValue","isLeafNode","start","start$1","stop","stop$1","invoke","update","nullEvent","raise","raise$1","send","send$1","done","toActionObjects","resolveActions","doneInvoke","error","toActionObject","toActivityDefinition","after","cancel","initEvent","State","stateValuesEqual","createInvocableActor","toInvokeDefinition","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","EMPTY_OBJECT","isStateId","str","createDefaultOptions","actions","guards","services","activities","delays","validateArrayifiedTransitions","stateNode","event","transitions","hasNonLastUnguardedTarget","slice","some","transition","target","eventText","id","StateNode","config","options","context","_this","undefined","_a","order","__xstatenode","__cache","events","relativeValue","Map","initialStateValue","initialState","on","candidates","delayedTransitions","idMap","tags","Object","assign","parent","_parent","key","_key","machine","concat","delimiter","join","version","type","parallel","states","length","history","schema","initial","stateConfig","dfs","e_1","_b","_c","next","child","value","e_1_1","return","call","_transient","always","Array","strict","onEntry","entry","map","action","onExit","exit","meta","doneData","data","invokeConfig","i","src","invokeSrc","invokeSource","activity","bind","prototype","_init","forEach","withConfig","withContext","defineProperty","get","state","definition","enumerable","configurable","toJSON","reduce","eventType","push","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","filter","sameEventType","afterConfig","mutateEntryExit","delay","delayRef","configTransition","resolvedTransition","resolvedDelay","isNaN","delayedTransition","formatTransition","getStateNodes","stateValue","getStateNode","subStateKeys","subStateNodes","subStateKey","allSubStateNodes","subStateNode","handles","includes","resolveState","configuration","from","resolve","transitionLeafNode","_event","transitionCompoundNode","_transition","transitionParallelNode","e_2","transitionMap","subStateValue","e_2_1","stateTransitions","enabledTransitions","st","willTransition","entryNodes","t","entrySet","exitSet","source","e_3","name","nextStateNodes","selectedTransition","candidate","cond","stateIn","in","resolvedContext","isInState","matches","getStateNodeById","guardPassed","err","Error","message","apply","e_3_1","allNextStateNodes","getRelativeStateNodes","historyValue","isInternal","internal","reentryNodes","n","nodesFromChild","childStateNode","escapes","nodes","marker","getActions","currentContext","prevState","e_4","e_5","prevConfig","resolvedConfig","resolvedConfig_1","resolvedConfig_1_1","sn","e_4_1","prevConfig_1","prevConfig_1_1","e_5_1","doneEvents","grandparent","every","parentNode","sort","a","b","entryStates","Set","exitStates","entryActions","exitActions","currentState","resolvedStateValue","getResolvedPath","stateTransition","resolveTransition","resolveRaisedTransition","originalEvent","currentActions","unshift","e_6","actions_1","actions_1_1","e_6_1","resolvedActions","updatedContext","to","Internal","raisedEvents","nonRaisedActions","invokeActions","children","acc","resolvedConfiguration","isDone","nextState","_sessionid","didUpdateContext","changed","maybeNextState","isTransient","raisedEvent","shift","stateKey","result","stateId","resolvedStateId","getStateNodeByPath","statePath","e","arrayStatePath","currentStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialStateNodes","initialStateNodePaths","initialPath","getFromRelativePath","relativePath","childStatePath","relativeStateValue","current","historyTarget","relativeChildPath","subHistoryValue","subStatePath","childStateIds","stateIds","e_7","e_8","ownEvents","_d","_e","_f","event_1","add","e_8_1","e_7_1","resolveTarget","_target","isInternalTarget","resolvedTarget","targetStateNode","transitionConfig","normalizedTarget","e_9","onConfig","wildcardConfigs","strictTransitionConfigs_1","transitionConfigArray","eventlessConfig","doneConfig","onDone","String","invokeDef","settleTransitions","onError","formattedTransitions","delayedTransitions_1","delayedTransitions_1_1","e_9_1"],"sources":["C:/PoC-FE/video-fsm-uno/node_modules/xstate/es/StateNode.js"],"sourcesContent":["import { __assign, __values, __spread, __read, __rest } from './_virtual/_tslib.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { mapValues, isArray, flatten, keys, toArray, toStateValue, isString, getEventType, matchesState, path, evaluateGuard, mapContext, toSCXMLEvent, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, isFunction } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, has, getChildren, getValue, isLeafNode } from './stateUtils.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent, raise as raise$1, send as send$1 } from './actionTypes.js';\nimport { done, start, raise, stop, toActionObjects, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\" + event + \"'\";\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \" + eventText + \" on state '\" + stateNode.id + \"' are unreachable. \" + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  context // TODO: this is unsafe, but we're removing it in v5 anyway\n  ) {\n    var _this = this;\n\n    if (context === void 0) {\n      context = undefined;\n    }\n\n    var _a;\n\n    this.config = config;\n    this.context = context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = this.options._parent;\n    this.key = this.config.key || this.options._key || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spread([this.machine.key], this.path).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \" + (this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\" + this.type + \"'`\") + \" in the config for state node '\" + this.id + \"' instead.\");\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {\n        _parent: _this,\n        _key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        _this.machine.options.services = __assign((_a = {}, _a[invokeConfig.id] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeConfig.id,\n          id: invokeConfig.id\n        });\n      } else if (isString(invokeConfig.src)) {\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeConfig.id || invokeConfig.src,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeSrc = _this.id + \":invocation[\" + i + \"]\"; // TODO: util function\n\n        _this.machine.options.services = __assign((_b = {}, _b[invokeSrc] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSrc\n        }, invokeConfig), {\n          src: invokeSrc\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSource.type\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    if (context === void 0) {\n      context = this.context;\n    }\n\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? _this.id + \":delay[\" + i + \"]\" : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this.states[stateValue]];\n    }\n\n    var subStateKeys = keys(stateValue);\n    var subStateNodes = subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey);\n    });\n    return subStateNodes.concat(subStateKeys.reduce(function (allSubStateNodes, subStateKey) {\n      var subStateNode = _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n\n      return allSubStateNodes.concat(subStateNode);\n    }, []));\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(state.value)));\n    return new State(__assign(__assign({}, state), {\n      value: this.resolve(state.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this)\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\" + (cond.name || cond.type) + \"' in transition for event '\" + eventName + \"' in state node '\" + this.id + \"':\\n\" + err.message);\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spread(candidate.actions));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = isInternal ? [] : flatten(allNextStateNodes.map(function (n) {\n      return _this.nodesFromChild(n);\n    }));\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.nodesFromChild = function (childStateNode) {\n    if (childStateNode.escapes(this)) {\n      return [];\n    }\n\n    var nodes = [];\n    var marker = childStateNode;\n\n    while (marker && marker !== this) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    nodes.push(this); // inclusive\n\n    return nodes;\n  };\n  /**\r\n   * Whether the given state node \"escapes\" this state node. If the `stateNode` is equal to or the parent of\r\n   * this state node, it does not escape.\r\n   */\n\n\n  StateNode.prototype.escapes = function (stateNode) {\n    if (this === stateNode) {\n      return false;\n    }\n\n    var parent = this.parent;\n\n    while (parent) {\n      if (parent === stateNode) {\n        return false;\n      }\n\n      parent = parent.parent;\n    }\n\n    return true;\n  };\n\n  StateNode.prototype.getActions = function (transition, currentContext, _event, prevState) {\n    var e_4, _a, e_5, _b;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n    var resolvedConfig = transition.configuration.length ? getConfiguration(prevConfig, transition.configuration) : prevConfig;\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    if (!transition.source) {\n      transition.exitSet = []; // Ensure that root StateNode (machine) is entered\n\n      transition.entrySet.push(this);\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n\n    var _c = __read([flatten(Array.from(entryStates).map(function (stateNode) {\n      return __spread(stateNode.activities.map(function (activity) {\n        return start(activity);\n      }), stateNode.onEntry);\n    })).concat(doneEvents.map(raise)), flatten(Array.from(exitStates).map(function (stateNode) {\n      return __spread(stateNode.onExit, stateNode.activities.map(function (activity) {\n        return stop(activity);\n      }));\n    }))], 2),\n        entryActions = _c[0],\n        exitActions = _c[1];\n\n    var actions = toActionObjects(exitActions.concat(transition.actions).concat(entryActions), this.machine.options.actions);\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\" + WILDCARD + \"')\");\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\" + this.id + \"' does not accept event '\" + _event.name + \"'\");\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spread(resolvedConfig);\n    return this.resolveTransition(stateTransition, currentState, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spread(currentActions));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, _event, context) {\n    var e_6, _a;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    if (context === void 0) {\n      context = this.machine.context;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var currentContext = currentState ? currentState.context : context;\n    var actions = this.getActions(stateTransition, currentContext, _event, currentState);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actions_1 = __values(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {\n        var action = actions_1_1.value;\n\n        if (action.type === start$1) {\n          activities[action.activity.id || action.activity.type] = action;\n        } else if (action.type === stop$1) {\n          activities[action.activity.id || action.activity.type] = false;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _b = __read(resolveActions(this, currentState, currentContext, _event, actions), 2),\n        resolvedActions = _b[0],\n        updatedContext = _b[1];\n\n    var _c = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send$1 && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _c[0],\n        nonRaisedActions = _c[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var resolvedConfiguration = resolvedStateValue ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var meta = resolvedConfiguration.reduce(function (acc, stateNode) {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n\n      return acc;\n    }, {});\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      meta: resolvedStateValue ? meta : currentState ? currentState.meta : undefined,\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: currentState === null || currentState === void 0 ? void 0 : currentState.tags\n    });\n    var didUpdateContext = currentContext !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    }\n\n    if (!resolvedStateValue) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      var isTransient = this._transient || configuration.some(function (stateNode) {\n        return stateNode._transient;\n      });\n\n      if (isTransient) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    maybeNextState.tags = new Set(flatten(maybeNextState.configuration.map(function (sn) {\n      return sn.tags;\n    })));\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\" + stateKey + \"' from '\" + this.id + \"'; no child states exist.\");\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\" + resolvedStateId + \"' does not exist on machine '\" + this.id + \"'\");\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\" + stateIdentifier + \"'\");\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\" + this.initial + \"' not found on '\" + this.key + \"'\");\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, undefined, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\" + this.id + \"'.\");\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\" + this.id + \"' has no initial state.\");\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\" + stateKey + \"' from node with no states\");\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_7, _a, e_8, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_8 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\" + event_1);\n                }\n              } catch (e_8_1) {\n                e_8 = {\n                  error: e_8_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_8) throw e_8.error;\n                }\n              }\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\" + _this.id + \"':\\n\" + err.message);\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\" + t.id;\n          }) : undefined,\n          source: \"#\" + _this.id\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_9, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + (\"Please check the `on` configuration for \\\"#\" + _this.id + \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\" + this.id + \"\\\".\");\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spread(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spread(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spread(doneConfig, invokeConfig, onConfig, eventlessConfig).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}