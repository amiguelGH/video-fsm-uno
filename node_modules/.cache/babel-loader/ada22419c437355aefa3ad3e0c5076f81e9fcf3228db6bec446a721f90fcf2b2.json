{"ast":null,"code":"import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, toInvokeSource, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, uniqueId, toObserver } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { provide, consume } from './serviceScope.js';\nimport { isSpawnedActor, createDeferredActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService, getGlobal } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\nvar Interpreter = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n        return _this.state;\n      }\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n        return _this.state;\n      }\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n        var nextState = _this.nextState(_event);\n        _this.update(nextState, _event);\n      });\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n        return;\n      }\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n    var clock = resolvedOptions.clock,\n      logger = resolvedOptions.logger,\n      parent = resolvedOptions.parent,\n      id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n      if (this._initialState) {\n        return this._initialState;\n      }\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n    var _this = this; // Attach session ID to state\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n    return this;\n  };\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _,\n  // TODO: error listener\n  completeListener) {\n    var _this = this;\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n    var listener;\n    var resolvedCompleteListener = completeListener;\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n    var _this = this;\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n    this.state.configuration.forEach(function (stateNode) {\n      var e_11, _a;\n      try {\n        for (var _b = __values(stateNode.definition.exit), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var action = _c.value;\n          _this.exec(action, _this.state);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n    }); // Stop all children\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n    this.scheduler.clear();\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error(\n      // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n    this.scheduler.schedule(function () {\n      var e_12, _a;\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n        _this.forward(_event);\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n          _loop_1(event_1);\n        }\n      } catch (e_12_1) {\n        e_12 = {\n          error: e_12_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_12) throw e_12.error;\n        }\n      }\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n    var _event = toSCXMLEvent(event);\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n  Interpreter.prototype.forward = function (event) {\n    var e_13, _a;\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n        child.send(event);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n    var context = state.context,\n      _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n        throw err;\n      }\n    }\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n        break;\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n              data = activity.data;\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity),\n              // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n              return;\n            }\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource\n            }) : serviceCreator;\n            if (isPromiseLike(source)) {\n              this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.spawnMachine(resolvedData ? source.withContext(resolvedData) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            } else ;\n          } else {\n            this.spawnActivity(activity);\n          }\n          break;\n        }\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n      case log:\n        var label = action.label,\n          value = action.value;\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n        break;\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n        break;\n    }\n    return undefined;\n  };\n  Interpreter.prototype.removeChild = function (childId) {\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n  };\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n    if (!child) {\n      return;\n    }\n    this.removeChild(childId);\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n    var actor = childService;\n    this.children.set(childService.id, actor);\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.removeChild(id);\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n        var errorEvent = error(id, errorData);\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n          observer.next(response);\n          if (unsubscribed) {\n            return;\n          }\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n      if (canceled) {\n        return;\n      }\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n    var callbackStop;\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n      return;\n    } // Start implementation\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n      registerService(this);\n    }\n  };\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return setTimeout(fn, ms);\n        },\n        clearTimeout: function (id) {\n          return clearTimeout(id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof self !== 'undefined' ? self : global);\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\nexport { Interpreter, InterpreterStatus, interpret, spawn };","map":{"version":3,"names":["__values","__assign","__spread","IS_PRODUCTION","warn","mapContext","isFunction","keys","toSCXMLEvent","toInvokeSource","isPromiseLike","isObservable","isMachine","reportUnhandledExceptionOnInvocation","symbolObservable","isArray","toEventObject","isString","isActor","uniqueId","toObserver","ActionTypes","SpecialTargets","isInFinalState","errorPlatform","log","stop","start","cancel","send","update","error","error$1","doneInvoke","initEvent","getActionFunction","isState","State","bindActionToState","provide","consume","isSpawnedActor","createDeferredActor","Scheduler","registry","registerService","getGlobal","DEFAULT_SPAWN_OPTIONS","sync","autoForward","InterpreterStatus","Interpreter","machine","options","_this","defaultOptions","scheduler","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","status","NotStarted","children","Map","forwardTo","init","event","payload","batch","state","_event","Stopped","name","id","JSON","stringify","data","Running","deferEvents","Error","schedule","forward","nextState","_state","sendTo","to","isParent","parent","Parent","target","get","undefined","type","origin","sessionId","resolvedOptions","clock","logger","resolvedId","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","actions","_c","next","done","action","value","exec","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","forEach","child","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","context","history","e_4_1","isDone","configuration","finalChildStateNode","find","sn","doneData","_l","_m","e_5_1","onTransition","add","subscribe","nextListenerOrObserver","_","completeListener","unsubscribe","resolvedCompleteListener","bind","complete","onDone","delete","onEvent","onSend","onChange","onStop","off","register","resolvedState","resolveState","from","attachDev","initialize","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","stateNode","e_11","definition","exit","e_11_1","_p","_q","key","clearTimeout","e_10_1","clear","free","events","length","e_12","batchChanged","batchedActions","_loop_1","event_1","transition","push","apply","map","a","changed","events_1","events_1_1","e_12_1","sender","indexOf","nextEvents","some","nextEvent","e_13","e_13_1","defer","sendAction","setTimeout","delay","sendId","actionFunctionMap","actionOrExec","err","activity","activities","Invoke","invokeSource","src","serviceCreator","services","resolvedData","source","spawnPromise","Promise","resolve","spawnCallback","spawnObservable","spawnMachine","withContext","spawnActivity","stopChild","label","removeChild","childId","spawn","entity","spawnActor","childService","actor","set","doneEvent","promise","canceled","then","response","errorData","errorEvent","strict","handleError","observer","unsubscribed","toJSON","callback","receivers","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","global","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","fn","ms","console","self","interpret","resolveSpawnOptions","nameOrOptions","service","isLazyEntity","interpreter"],"sources":["C:/PoC-FE/video-fsm-uno/node_modules/xstate/es/interpreter.js"],"sourcesContent":["import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, toInvokeSource, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, uniqueId, toObserver } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { provide, consume } from './serviceScope.js';\nimport { isSpawnedActor, createDeferredActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService, getGlobal } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    var _this = this;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.state.configuration.forEach(function (stateNode) {\n      var e_11, _a;\n\n      try {\n        for (var _b = __values(stateNode.definition.exit), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var action = _c.value;\n\n          _this.exec(action, _this.state);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n    }); // Stop all children\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n\n    this.scheduler.schedule(function () {\n      var e_12, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_12_1) {\n        e_12 = {\n          error: e_12_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_12) throw e_12.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_13, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n\n        child.send(event);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource\n            }) : serviceCreator;\n\n            if (isPromiseLike(source)) {\n              this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.spawnMachine(resolvedData ? source.withContext(resolvedData) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            } else ;\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return setTimeout(fn, ms);\n        },\n        clearTimeout: function (id) {\n          return clearTimeout(id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof self !== 'undefined' ? self : global);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}