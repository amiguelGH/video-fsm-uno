{"ast":null,"code":"var _jsxFileName = \"C:\\\\PoC-FE\\\\video-fsm-uno\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { assign, createActor, createMachine, fromCallback, fromPromise, fromTransition, setup, sendTo, fromObservable, fromEventObservable } from \"xstate\";\nimport { percentage, minutes, seconds } from \"./utils\";\nimport { Logger, ConsoleLogger } from 'react-console-logger';\nimport { interval, Subscribable, fromEvent, Observable } from \"rxjs\";\nimport { useRef, EventObject } from 'react';\nimport { map, take } from 'rxjs/operators';\nimport \"./reset.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pino = require(\"pino\");\nconst logger = pino({\n  transport: {\n    target: \"pino-pretty\"\n  }\n});\nlogger.info('Hello World');\nconst myLogger = new Logger();\nconst IntervalComponent = () => {\n  _s();\n  const intervalId = useRef(null);\n};\n_s(IntervalComponent, \"AtE7qEgDgYa9D+VeQCZZnPCjNWs=\");\n_c = IntervalComponent;\nconst miContexto$ = {\n  video: null,\n  duration: 0,\n  elapsed: 0,\n  numVideos: 0,\n  avance: 0,\n  myInterval: 5000,\n  intervalId: null,\n  userId: \"amiguel777@gmail.com\",\n  observador: \"vacio\",\n  observa: null,\n  observando: 0\n};\n\n/**\n * Video State Machine\n */\n\nconst videoMachine = setup({\n  types: {},\n  actions: {\n    setVideo: assign({\n      video: ({\n        event\n      }) => event.video,\n      duration: ({\n        event\n      }) => event.video.duration\n    }),\n    iniciaObservador: ({\n      context,\n      _event\n    }) => {\n      if (context.observa != null) context.observa.subscribe(snapshot => {\n        console.log(snapshot);\n      });\n    },\n    paraObservador: assign({\n      duration: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    activaObservador: ({\n      context,\n      _event\n    }) => {\n      myLogger.error(\"activaObservador\");\n    },\n    setElapsed: assign({\n      elapsed: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    setTime: assign({\n      elapsed: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    playVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.play();\n      if (context.observa != null) context.observa.subscribe(snapshot => {\n        console.log(snapshot);\n      });\n    },\n    logAction: ({\n      context,\n      _event\n    }) => {\n      myLogger.info(\"Preparando video \");\n    },\n    pauseVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.pause();\n      myLogger.error(\"Avance:\" + context.avance);\n      context.avance = context.video.currentTime;\n      miContexto$.avance = context.video.currentTime;\n      myLogger.warn(JSON.stringify(miContexto$.subscribe));\n    },\n    progressVideo: ({\n      context,\n      _event\n    }) => {\n      myLogger.warn(\"Avance:\" + context.avance);\n    },\n    setAvance: assign({\n      avance: ({\n        context,\n        _event\n      }) => Math.floor(context.video.currentTime / context.video.duration * 100)\n    }),\n    setObsAvance: ({\n      context,\n      _event\n    }) => {\n      myLogger.warn(interval(context.avance, 3000));\n    },\n    restartVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.currentTime = 0;\n      context.video.play();\n      context.video.numVideos = context.video.numVideos + 1;\n    },\n    setNumVideos: ({\n      context,\n      _event\n    }) => {\n      context.video.numVideos = context.video.numVideos + 1;\n    }\n  },\n  guards: {},\n  delays: {},\n  actors: {\n    iniciador: fromCallback(({\n      sendBack,\n      receive\n    }) => {\n      receive(event => {\n        if (event.type === 'setVideo') {\n          sendBack({\n            type: \"setVideo\"\n          });\n        } else if (event.type === 'setNumVideos') {\n          sendBack({\n            type: \"setNumVideos\"\n          });\n        }\n      });\n    }),\n    iniciadorIntervalo: fromPromise(({\n      sendBack,\n      receive\n    }) => {\n      // Start the ticks activity\n      const interval = setInterval(() => {\n        //console.log(event); // this is the activity instance, not the event\n        // I need access to the event that triggered the transition to this activity's state (RUN)\n        console.log('TICK!');\n      }, 1000);\n      // Return a function that stops the ticks activity\n      return () => clearInterval(interval);\n    }),\n    sendEmail: fromPromise(async ({\n      input\n    }) => {\n      console.log('Sending email to', input.userId);\n      //const user = await fetchEmail(input.userId);  \n      return \"exito\";\n    }),\n    intervalLogic: fromObservable(() => {\n      return interval(1000);\n    })\n  }\n}).createMachine({\n  context: {\n    miContexto$\n  },\n  id: \"video\",\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        input: {},\n        src: \"intervalLogic\"\n      },\n      on: {\n        \"control.boton.oprime.setObservador\": {\n          actions: assign({\n            observa: ({\n              event\n            }) => {\n              return interval(event.observa);\n            }\n          })\n        },\n        \"control.boton.oprime.startObservador\": {\n          target: \"observando\",\n          actions: [\"iniciaObservador\"]\n        },\n        \"control.boton.oprime.ready\": [{\n          target: \"ready\",\n          actions: [{\n            type: \"setVideo\"\n          }, {\n            type: \"logAction\"\n          }, {\n            type: \"iniciaObservador\"\n          }]\n        }],\n        FAIL: [{\n          target: \"failure\",\n          actions: []\n        }]\n      }\n    },\n    observando: {\n      initial: \"pausadoObservando\",\n      states: {\n        pausadoObservando: {\n          entry: {\n            type: \"paraObservador\"\n          },\n          exit: {\n            type: \"activaObservador\"\n          },\n          on: {\n            \"control.boton.oprime.activaObservador\": [{\n              target: \"registraObservando\",\n              actions: []\n            }]\n          }\n        },\n        registraObservando: {\n          entry: {\n            type: \"iniciaObservador\"\n          },\n          exit: {\n            type: \"reIniciaObservador\"\n          },\n          on: {\n            \"control.boton.oprime.desactivaObservador\": [{\n              target: \"pausadoObservando\",\n              actions: []\n            }]\n          }\n        }\n      }\n    },\n    ready: {\n      initial: \"paused\",\n      states: {\n        paused: {\n          entry: {\n            type: \"setElapsed\"\n          },\n          exit: {\n            type: \"playVideo\"\n          },\n          on: {\n            \"control.boton.oprime.play\": [{\n              target: \"playing\",\n              actions: []\n            }]\n          }\n        },\n        playing: {\n          entry: {\n            type: \"setElapsed\"\n          },\n          exit: {\n            type: \"pauseVideo\"\n          },\n          on: {\n            COUNT: [{\n              actions: [{\n                type: \"notifyCount\"\n              }]\n            }],\n            TIMING: [{\n              target: \"playing\",\n              actions: [{\n                type: \"setElapsed\"\n              }, {\n                type: \"setAvance\"\n              }, {\n                type: \"progressVideo\"\n              }]\n            }],\n            \"control.boton.oprime.pause\": [{\n              target: \"paused\",\n              actions: []\n            }],\n            \"control.boton.oprime.stop\": [{\n              target: \"ended\",\n              actions: []\n            }]\n          }\n        },\n        ended: {\n          invoke: {\n            input: {},\n            src: \"iniciador\"\n          },\n          on: {\n            setNumVideos: [{\n              actions: [{\n                type: \"inline:video.ready.ended#setNumVideos[-1]#transition[0]\"\n              }]\n            }],\n            \"control.boton.oprime.play\": [{\n              target: \"playing\",\n              actions: [{\n                type: \"restartVideo\"\n              }]\n            }]\n          }\n        }\n      }\n    },\n    failure: {\n      type: \"final\"\n    },\n    invoke: {}\n  }\n});\nconst observadorActor = createActor(videoMachine);\n\n// Observer as an object\nconst subscription = observadorActor.subscribe(snapshot => {\n  console.log('Estado', snapshot);\n  //localStorage.setItem('state-key', JSON.stringify(snapshot))\n});\nobservadorActor.start();\nobservadorActor.send({\n  type: \"control.boton.oprime.setObservador\",\n  observa: 1000\n});\n\n/**\n * Components\n */\n\nexport default function App() {\n  _s2();\n  const ref = React.useRef(null);\n  const [current, send] = useMachine(videoMachine);\n  const {\n    duration,\n    elapsed,\n    avance\n  } = current.context;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: ref,\n      onCanPlay: () => {\n        send({\n          type: \"control.boton.oprime.ready\",\n          video: ref.current\n        });\n      },\n      onTimeUpdate: () => {\n        send({\n          type: \"TIMING\",\n          video: ref.current\n        });\n      },\n      onEnded: () => {\n        send({\n          type: \"control.boton.oprime.stop\"\n        });\n      },\n      onError: () => {\n        send({\n          type: \"FAIL\"\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/fox.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), [\"paused\", \"playing\", \"ended\"].some(subState => current.matches({\n      ready: subState\n    })) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ElapsedBar, {\n        elapsed: elapsed,\n        duration: duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        current: current,\n        send: send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        elapsed: elapsed,\n        duration: duration,\n        avance: avance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonObservador, {\n        current: current,\n        send: send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ConsoleLogger, {\n        logger: myLogger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"3LXRPWXwUMZXMKghCEkhhYkSV3E=\", false, function () {\n  return [useMachine];\n});\n_c2 = App;\nconst Buttons = ({\n  current,\n  send\n}) => {\n  if (current.matches({\n    ready: \"playing\"\n  })) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        send({\n          type: \"control.boton.oprime.pause\"\n        });\n      },\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: '#DDD'\n    },\n    onClick: () => {\n      send({\n        type: \"control.boton.oprime.play\"\n      });\n    },\n    children: \"Play\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Buttons;\nconst ButtonObservador = ({\n  current,\n  send\n}) => {\n  const estado = \"inicial\";\n  if (current.context.video !== null) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: '#CCC'\n      },\n      onClick: () => {\n        send({\n          type: \"control.boton.oprime.startObservador\"\n        });\n      },\n      children: \"Observar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: '#AAA'\n    },\n    onClick: () => {\n      send({\n        type: \"control.boton.oprime.stopObservador\"\n      });\n    },\n    children: \"Observando\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 5\n  }, this);\n};\n_c4 = ButtonObservador;\nconst ElapsedBar = ({\n  elapsed,\n  duration\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"elapsed\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elapsed-bar\",\n    style: {\n      width: `${percentage(duration, elapsed)}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 496,\n  columnNumber: 3\n}, this);\n_c5 = ElapsedBar;\nconst Timer = ({\n  elapsed,\n  duration\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"timer\",\n  children: [minutes(elapsed), \":\", seconds(elapsed), \" of \", minutes(duration), \":\", seconds(duration)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 505,\n  columnNumber: 3\n}, this);\n_c6 = Timer;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"IntervalComponent\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"ButtonObservador\");\n$RefreshReg$(_c5, \"ElapsedBar\");\n$RefreshReg$(_c6, \"Timer\");","map":{"version":3,"names":["React","useMachine","assign","createActor","createMachine","fromCallback","fromPromise","fromTransition","setup","sendTo","fromObservable","fromEventObservable","percentage","minutes","seconds","Logger","ConsoleLogger","interval","Subscribable","fromEvent","Observable","useRef","EventObject","map","take","jsxDEV","_jsxDEV","pino","require","logger","transport","target","info","myLogger","IntervalComponent","_s","intervalId","_c","miContexto$","video","duration","elapsed","numVideos","avance","myInterval","userId","observador","observa","observando","videoMachine","types","actions","setVideo","event","iniciaObservador","context","_event","subscribe","snapshot","console","log","paraObservador","currentTime","activaObservador","error","setElapsed","setTime","playVideo","play","logAction","pauseVideo","pause","warn","JSON","stringify","progressVideo","setAvance","Math","floor","setObsAvance","restartVideo","setNumVideos","guards","delays","actors","iniciador","sendBack","receive","type","iniciadorIntervalo","setInterval","clearInterval","sendEmail","input","intervalLogic","id","initial","states","loading","invoke","src","on","FAIL","pausadoObservando","entry","exit","registraObservando","ready","paused","playing","COUNT","TIMING","ended","failure","observadorActor","subscription","start","send","App","_s2","ref","current","className","children","onCanPlay","onTimeUpdate","onEnded","onError","fileName","_jsxFileName","lineNumber","columnNumber","some","subState","matches","ElapsedBar","Buttons","Timer","ButtonObservador","_c2","onClick","style","backgroundColor","_c3","estado","_c4","width","_c5","_c6","$RefreshReg$"],"sources":["C:/PoC-FE/video-fsm-uno/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useMachine} from \"@xstate/react\";\nimport { assign, createActor, createMachine, fromCallback, fromPromise, fromTransition, setup, sendTo, fromObservable,  fromEventObservable} from \"xstate\";\nimport { percentage, minutes, seconds } from \"./utils\";\nimport {Logger, ConsoleLogger} from 'react-console-logger';\nimport { interval, Subscribable, fromEvent, Observable } from \"rxjs\";\nimport { useRef, EventObject } from 'react';\nimport { map, take } from 'rxjs/operators';\n\n\nimport \"./reset.css\";\nimport \"./App.css\";\n\n\nconst pino = require(\"pino\");\nconst logger = pino({\n  transport: {\n    target: \"pino-pretty\",\n  },\n});\n\nlogger.info('Hello World');\n\nconst myLogger = new Logger();\n  \nconst IntervalComponent = () => {\n  const intervalId = useRef(null);\n};\n\n\nconst   miContexto$  = {\n  video: null,\n  duration: 0,\n  elapsed: 0,\n  numVideos: 0,\n  avance: 0,\n  myInterval: 5000,\n  intervalId: null,\n  userId: \"amiguel777@gmail.com\",\n  observador: \"vacio\",\n  observa: null,\n  observando: 0,\n} ;\n\n/**\n * Video State Machine\n */\n\n\n\nconst videoMachine = setup({\n  types:{},\n  \n  actions:{\n    \n    setVideo :  \n       assign({\n        video: ({event}) => event.video,\n        duration: ({event}) => event.video.duration\n      }),\n    \n    \n\n    iniciaObservador : ({context, _event}) => {\n      if(context.observa != null)  \n        context.observa.subscribe(snapshot => {\n            console.log(snapshot);\n      })\n    },\n  \n\n    \n    paraObservador : assign({\n      duration: ({context, _event}) => context.video.currentTime,\n    }),\n\n    activaObservador : ({context, _event}) => {\n      myLogger.error(\"activaObservador\");\n    },\n    \n\n    setElapsed : assign({\n      elapsed: ({context, _event}) => context.video.currentTime,\n    }),\n    \n    setTime : assign({\n      elapsed: ({context, _event}) => context.video.currentTime\n    }),\n\n    playVideo : ({context, _event}) => {\n      context.video.play();\n      if(context.observa != null)  \n        context.observa.subscribe(snapshot => {\n          console.log(snapshot);\n      })\n      \n\n    },\n\n    logAction : ({context, _event}) => {\n      myLogger.info(\"Preparando video \");\n    },\n    \n    pauseVideo : ({context, _event}) => {\n      context.video.pause();\n      myLogger.error(\"Avance:\"+context.avance);\n      context.avance = context.video.currentTime;\n      miContexto$.avance = context.video.currentTime;\n      \n      myLogger.warn(JSON.stringify(miContexto$.subscribe));\n    },\n\n    progressVideo : ({context, _event}) => {\n      myLogger.warn(\"Avance:\"+context.avance);\n    },\n\n    setAvance : assign({\n      avance: ({context, _event}) => Math.floor((context.video.currentTime/context.video.duration)*100),\n    }),\n\n    setObsAvance : ({context, _event}) => {\n      myLogger.warn(interval(context.avance, 3000));\n    },\n\n    \n    restartVideo : ({context, _event}) => {\n      context.video.currentTime = 0;\n      context.video.play();\n      context.video.numVideos = context.video.numVideos +1;\n    },\n\n    setNumVideos : ({context, _event}) => {\n      context.video.numVideos = context.video.numVideos +1;\n    },\n\n    },\n    guards:{},\n    delays:{},\n    actors:{\n      iniciador: fromCallback(({sendBack, receive}) => {\n        receive(event => {\n          if (event.type === 'setVideo') {\n            sendBack({type:\"setVideo\"})\n          }\n          else if (event.type === 'setNumVideos') {\n            sendBack({type:\"setNumVideos\"})\n          } \n        })\n           \n      }),\n\n      iniciadorIntervalo :  fromPromise(({sendBack, receive}) => {\n        // Start the ticks activity\n        const interval = setInterval(() => {\n        //console.log(event); // this is the activity instance, not the event\n        // I need access to the event that triggered the transition to this activity's state (RUN)\n        console.log('TICK!')\n        }, 1000);\n        // Return a function that stops the ticks activity\n      return () => clearInterval(interval);\n      }),\n\n      sendEmail: fromPromise(async ({ input }) => {\n        console.log('Sending email to', input.userId);        \n        //const user = await fetchEmail(input.userId);  \n        return \"exito\";\n      }),\n      \n      intervalLogic : fromObservable(() => {\n        return interval(1000);        \n      }),\n\n     \n}\n})\n.createMachine( \n  {\n    context:  { miContexto$ }\n      ,\n    id: \"video\",\n    initial: \"loading\",\n    states: {\n      loading: {\n        invoke: {\n          input: {},\n          src: \"intervalLogic\",\n        },\n        on: {\n          \"control.boton.oprime.setObservador\":{\n            actions: assign({\n              observa:({event}) => {return interval(event.observa);}})\n          },\n\n          \"control.boton.oprime.startObservador\" : {\n              target:\"observando\",\n              actions:[\"iniciaObservador\"]\n          },\n\n          \"control.boton.oprime.ready\": [\n            {\n              target: \"ready\",\n              actions: [\n                {\n                  type: \"setVideo\",\n                },\n                {\n                  type: \"logAction\",\n                },\n                {\n                  type: \"iniciaObservador\",\n                },\n              ],\n            },\n          ],\n          FAIL: [\n            {\n              target: \"failure\",\n              actions: [],\n            },\n          ],\n        },\n      },\n      observando: {\n        \n        initial: \"pausadoObservando\",\n        states: {\n          pausadoObservando: {\n            entry: {\n              type: \"paraObservador\",\n            },\n            exit: {\n              type: \"activaObservador\",\n            },\n            on: {\n              \"control.boton.oprime.activaObservador\": [\n                {\n                  target: \"registraObservando\",\n                  actions: [],\n                },\n              ],\n            },\n          },\n          registraObservando: {\n            entry: {\n              type: \"iniciaObservador\",\n            },\n            exit: {\n              type: \"reIniciaObservador\",\n            },\n            on: {\n              \"control.boton.oprime.desactivaObservador\": [\n                {\n                  target: \"pausadoObservando\",\n                  actions: [],\n                },\n              ],\n            },\n          },\n          \n        },\n      },\n      ready: {\n        initial: \"paused\",\n        states: {\n          paused: {\n            entry: {\n              type: \"setElapsed\",\n            },\n            exit: {\n              type: \"playVideo\",\n            },\n            on: {\n              \"control.boton.oprime.play\": [\n                {\n                  target: \"playing\",\n                  actions: [],\n                },\n              ],\n            },\n          },\n          playing: {\n            entry: {\n              type: \"setElapsed\",\n            },\n            exit: {\n              type: \"pauseVideo\",\n            },\n            on: {\n              COUNT: [\n                {\n                  actions: [\n                    {\n                      type: \"notifyCount\",\n                    },\n                  ],\n                },\n              ],\n              TIMING: [\n                {\n                  target: \"playing\",\n                  actions: [\n                    {\n                      type: \"setElapsed\",\n                    },\n                    {\n                      type: \"setAvance\",\n                    },\n                    {\n                      type: \"progressVideo\",\n                    },\n                  ],\n                },\n              ],\n              \"control.boton.oprime.pause\": [\n                {\n                  target: \"paused\",\n                  actions: [],\n                },\n              ],\n              \"control.boton.oprime.stop\": [\n                {\n                  target: \"ended\",\n                  actions: [],\n                },\n              ],\n            },\n          },\n          ended: {\n            invoke: {\n              input: {},\n              src: \"iniciador\",\n            },\n            on: {\n              setNumVideos: [\n                {\n                  actions: [\n                    {\n                      type: \"inline:video.ready.ended#setNumVideos[-1]#transition[0]\",\n                    },\n                  ],\n                },\n              ],\n              \"control.boton.oprime.play\": [\n                {\n                  target: \"playing\",\n                  actions: [\n                    {\n                      type: \"restartVideo\",\n                    },\n                  ],\n                },\n              ],\n            },\n          },\n        },\n      },\n      failure: {\n        type: \"final\",\n      },\n      invoke: {},\n    },\n  },\n  \n);\n\n\n\n\nconst observadorActor = createActor(videoMachine);\n\n\n\n// Observer as an object\nconst subscription = observadorActor.subscribe(snapshot => {\n    console.log('Estado', snapshot);\n    //localStorage.setItem('state-key', JSON.stringify(snapshot))\n  }\n);\n\nobservadorActor.start();\n\nobservadorActor.send({\n  type:\"control.boton.oprime.setObservador\",\n  observa: 1000,  \n})\n\n\n\n\n/**\n * Components\n */\n\nexport default function App() {\n  const ref = React.useRef(null);\n  const [current, send] = useMachine(videoMachine);\n  const { duration, elapsed, avance } = current.context;\n  \n  \n\n  \n  return (\n    <div className=\"container\">\n      <video\n        ref={ref}\n        onCanPlay={() => {\n          send({type:\"control.boton.oprime.ready\",  video: ref.current });\n        }}\n        onTimeUpdate={() => {\n          send({type:\"TIMING\",  video: ref.current});\n        }}\n        onEnded={() => {\n          send({type:\"control.boton.oprime.stop\"});\n        }}\n        onError={() => {\n          send({type:\"FAIL\"});\n        }}\n      >\n        <source src=\"/fox.mp4\" type=\"video/mp4\" />\n      </video>\n\n      {[\"paused\", \"playing\", \"ended\"].some(subState =>\n        current.matches({ ready: subState })\n      ) && (\n        <div>\n          <ElapsedBar elapsed={elapsed} duration={duration} />\n          <Buttons current={current} send={send} />\n          <Timer elapsed={elapsed} duration={duration} avance = {avance} />\n          <ButtonObservador current={current} send={send} />\n      </div>\n\n        \n      )}\n\n      <div>\n        <ConsoleLogger   logger={myLogger} />\n      </div>\n    </div>\n  );\n}\n\nconst Buttons = ({ current, send }) => {\n  if (current.matches({ ready: \"playing\" })) {\n    return (\n      <button\n        onClick={() => {\n          send({type:\"control.boton.oprime.pause\"});\n        }}\n      >\n        Pause\n      </button>\n    );\n  }\n\n  return (\n    <button style={{backgroundColor: '#DDD'}}\n      onClick={() => {\n        send({type:\"control.boton.oprime.play\"});\n      }}\n    >\n      Play\n    </button>\n  );\n};\n\n\nconst ButtonObservador = ({ current, send }) => {\n  \n  const estado = \"inicial\";\n\n  if (current.context.video !== null) {\n    return (\n      <button  style={{backgroundColor: '#CCC'}}\n        onClick={() => {\n          send({type:\"control.boton.oprime.startObservador\"});\n        }}\n      >\n        Observar\n      </button>\n    );\n  }\n\n  return (\n    <button style={{backgroundColor: '#AAA'}}\n      onClick={() => {\n        send({type:\"control.boton.oprime.stopObservador\"});\n      }}\n    >\n      Observando\n    </button>\n  );\n};\n\n\nconst ElapsedBar = ({ elapsed, duration }) => (\n  <div className=\"elapsed\">\n    <div\n      className=\"elapsed-bar\"\n      style={{ width: `${percentage(duration, elapsed)}%` }}\n    />\n  </div>\n);\n\nconst Timer = ({ elapsed, duration }) => (\n  <span className=\"timer\">\n    {minutes(elapsed)}:{seconds(elapsed)} of {minutes(duration)}:\n    {seconds(duration)}\n  </span>\n);\n     "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}