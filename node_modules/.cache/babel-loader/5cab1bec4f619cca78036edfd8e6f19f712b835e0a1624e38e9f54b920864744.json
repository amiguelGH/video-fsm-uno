{"ast":null,"code":"var _jsxFileName = \"C:\\\\PoC-FE\\\\video-fsm-uno\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { assign, createActor, createMachine, fromCallback, fromPromise, fromTransition, setup, sendTo, fromObservable, fromEventObservable } from \"xstate\";\nimport { percentage, minutes, seconds } from \"./utils\";\nimport { Logger, ConsoleLogger } from 'react-console-logger';\nimport { interval, Subscribable, fromEvent } from \"rxjs\";\nimport { useRef } from 'react';\nimport { map, take } from 'rxjs/operators';\nimport \"./reset.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pino = require(\"pino\");\nconst logger = pino({\n  transport: {\n    target: \"pino-pretty\"\n  }\n});\nlogger.info('Hello World');\nconst myLogger = new Logger();\nconst IntervalComponent = () => {\n  _s();\n  const intervalId = useRef(null);\n};\n\n/**\n * Video State Machine\n */\n_s(IntervalComponent, \"AtE7qEgDgYa9D+VeQCZZnPCjNWs=\");\n_c = IntervalComponent;\nconst videoMachine = setup({\n  types: {},\n  actions: {\n    setVideo: assign({\n      video: ({\n        event\n      }) => event.video,\n      duration: ({\n        event\n      }) => event.video.duration\n    }),\n    setElapsed: assign({\n      elapsed: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    setTime: assign({\n      elapsed: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    playVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.play();\n      myLogger.info(\"Reproduciendo video \");\n    },\n    logAction: ({\n      context,\n      _event\n    }) => {\n      myLogger.info(\"Preparando video \");\n    },\n    pauseVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.pause();\n    },\n    progressVideo: ({\n      context,\n      _event\n    }) => {\n      myLogger.warn(\"Avance:\" + context.avance);\n    },\n    setAvance: assign({\n      avance: ({\n        context,\n        _event\n      }) => Math.floor(context.video.currentTime / context.video.duration * 100)\n    }),\n    setObsAvance: ({\n      context,\n      _event\n    }) => {\n      myLogger.warn(interval(context.avance, 3000));\n    },\n    restartVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.currentTime = 0;\n      context.video.play();\n      context.video.numVideos = context.video.numVideos + 1;\n    },\n    setNumVideos: ({\n      context,\n      _event\n    }) => {\n      context.video.numVideos = context.video.numVideos + 1;\n    }\n  },\n  guards: {},\n  delays: {},\n  actors: {\n    iniciador: fromCallback(({\n      sendBack,\n      receive\n    }) => {\n      receive(event => {\n        if (event.type === 'setVideo') {\n          sendBack({\n            type: \"setVideo\"\n          });\n        } else if (event.type === 'setNumVideos') {\n          sendBack({\n            type: \"setNumVideos\"\n          });\n        }\n      });\n    }),\n    iniciadorIntervalo: fromPromise(({\n      sendBack,\n      receive\n    }) => {\n      // Start the ticks activity\n      const interval = setInterval(() => {\n        //console.log(event); // this is the activity instance, not the event\n        // I need access to the event that triggered the transition to this activity's state (RUN)\n        console.log('TICK!');\n      }, 1000);\n      // Return a function that stops the ticks activity\n      return () => clearInterval(interval);\n    }),\n    sendEmail: fromPromise(async ({\n      input\n    }) => {\n      console.log('Sending email to', input.userId);\n      //const user = await fetchEmail(input.userId);  \n      return \"exito\";\n    }),\n    intervalLogic: fromObservable(() => interval(1000))\n  }\n}).createMachine({\n  id: \"video\",\n  initial: \"loading\",\n  context: {\n    video: null,\n    duration: 0,\n    elapsed: 0,\n    numVideos: 0,\n    avance: 0,\n    myInterval: 5000,\n    intervalId: null,\n    userId: \"amiguel777@gmail.com\",\n    observador: \"vacio\"\n  },\n  states: {\n    loading: {\n      invoke: {\n        src: 'sendEmail',\n        input: ({\n          context: {\n            userId\n          }\n        }) => ({\n          userId\n        })\n      },\n      on: {\n        \"control.boton.oprime.setObservador\": {\n          actions: assign({\n            observa: ({\n              event\n            }) => {\n              return interval(event.observa);\n            }\n          })\n        },\n        \"control.boton.oprime.ready\": {\n          target: [\"ready\"],\n          actions: [\"setVideo\", \"logAction\"]\n        },\n        FAIL: \"failure\"\n      }\n    },\n    ready: {\n      initial: \"paused\",\n      states: {\n        paused: {\n          entry: {\n            type: \"setElapsed\"\n          },\n          exit: {\n            type: \"playVideo\"\n          },\n          on: {\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: []\n            }\n          }\n        },\n        playing: {\n          entry: {\n            type: \"setElapsed\"\n          },\n          exit: {\n            type: \"pauseVideo\"\n          },\n          on: {\n            COUNT: {\n              actions: 'notifyCount'\n            },\n            TIMING: {\n              target: \"playing\",\n              actions: [\"setElapsed\", \"setAvance\", \"progressVideo\"]\n            },\n            \"control.boton.oprime.pause\": {\n              target: \"paused\",\n              actions: []\n            },\n            \"control.boton.oprime.stop\": \"ended\"\n          }\n        },\n        ended: {\n          invoke: {\n            src: \"iniciador\"\n          },\n          on: {\n            \"setNumVideos\": {\n              actions: sendTo(\"iniciador\", ({\n                event\n              }) => ({\n                type: \"setNumVideos\"\n              }))\n            },\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: \"restartVideo\"\n            }\n          }\n        }\n      }\n    },\n    failure: {\n      type: \"final\"\n    }\n  }\n});\nconst observadorActor = createActor(videoMachine);\n\n// Observer as an object\nconst subscription = observadorActor.subscribe(snapshot => {\n  console.log('Estado', snapshot);\n  //localStorage.setItem('state-key', JSON.stringify(snapshot))\n});\nobservadorActor.start();\nobservadorActor.send({\n  type: \"control.boton.oprime.setObservador\",\n  observa: 10000\n});\n\n/**\n * Components\n */\n\nexport default function App() {\n  _s2();\n  const ref = React.useRef(null);\n  const [current, send] = useMachine(videoMachine);\n  const {\n    duration,\n    elapsed,\n    avance\n  } = current.context;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: ref,\n      onCanPlay: () => {\n        send({\n          type: \"control.boton.oprime.ready\",\n          video: ref.current\n        });\n      },\n      onTimeUpdate: () => {\n        send({\n          type: \"TIMING\",\n          video: ref.current\n        });\n      },\n      onEnded: () => {\n        send({\n          type: \"control.boton.oprime.stop\"\n        });\n      },\n      onError: () => {\n        send({\n          type: \"FAIL\"\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/fox.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), [\"paused\", \"playing\", \"ended\"].some(subState => current.matches({\n      ready: subState\n    })) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ElapsedBar, {\n        elapsed: elapsed,\n        duration: duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        current: current,\n        send: send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        elapsed: elapsed,\n        duration: duration,\n        avance: avance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonObservador, {\n        current: current,\n        send: send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ConsoleLogger, {\n        logger: myLogger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"3LXRPWXwUMZXMKghCEkhhYkSV3E=\", false, function () {\n  return [useMachine];\n});\n_c2 = App;\nconst Buttons = ({\n  current,\n  send\n}) => {\n  if (current.matches({\n    ready: \"playing\"\n  })) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        send({\n          type: \"control.boton.oprime.pause\"\n        });\n      },\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: '#DDD'\n    },\n    onClick: () => {\n      send({\n        type: \"control.boton.oprime.play\"\n      });\n    },\n    children: \"Play\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Buttons;\nconst ButtonObservador = ({\n  current,\n  send\n}) => {\n  if (current.matches({\n    ready: \"observando\"\n  })) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: '#CCC'\n      },\n      onClick: () => {\n        send({\n          type: \"control.boton.oprime.setObservador\"\n        });\n      },\n      children: \"No Observar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: '#AAA'\n    },\n    onClick: () => {\n      send({\n        type: \"control.boton.oprime.unsetObservador\"\n      });\n    },\n    children: \"Observar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_c4 = ButtonObservador;\nconst ElapsedBar = ({\n  elapsed,\n  duration\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"elapsed\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elapsed-bar\",\n    style: {\n      width: `${percentage(duration, elapsed)}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 358,\n  columnNumber: 3\n}, this);\n_c5 = ElapsedBar;\nconst Timer = ({\n  elapsed,\n  duration\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"timer\",\n  children: [minutes(elapsed), \":\", seconds(elapsed), \" of \", minutes(duration), \":\", seconds(duration)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 367,\n  columnNumber: 3\n}, this);\n_c6 = Timer;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"IntervalComponent\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"ButtonObservador\");\n$RefreshReg$(_c5, \"ElapsedBar\");\n$RefreshReg$(_c6, \"Timer\");","map":{"version":3,"names":["React","useMachine","assign","createActor","createMachine","fromCallback","fromPromise","fromTransition","setup","sendTo","fromObservable","fromEventObservable","percentage","minutes","seconds","Logger","ConsoleLogger","interval","Subscribable","fromEvent","useRef","map","take","jsxDEV","_jsxDEV","pino","require","logger","transport","target","info","myLogger","IntervalComponent","_s","intervalId","_c","videoMachine","types","actions","setVideo","video","event","duration","setElapsed","elapsed","context","_event","currentTime","setTime","playVideo","play","logAction","pauseVideo","pause","progressVideo","warn","avance","setAvance","Math","floor","setObsAvance","restartVideo","numVideos","setNumVideos","guards","delays","actors","iniciador","sendBack","receive","type","iniciadorIntervalo","setInterval","console","log","clearInterval","sendEmail","input","userId","intervalLogic","id","initial","myInterval","observador","states","loading","invoke","src","on","observa","FAIL","ready","paused","entry","exit","playing","COUNT","TIMING","ended","failure","observadorActor","subscription","subscribe","snapshot","start","send","App","_s2","ref","current","className","children","onCanPlay","onTimeUpdate","onEnded","onError","fileName","_jsxFileName","lineNumber","columnNumber","some","subState","matches","ElapsedBar","Buttons","Timer","ButtonObservador","_c2","onClick","style","backgroundColor","_c3","_c4","width","_c5","_c6","$RefreshReg$"],"sources":["C:/PoC-FE/video-fsm-uno/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useMachine} from \"@xstate/react\";\nimport { assign, createActor, createMachine, fromCallback, fromPromise, fromTransition, setup, sendTo, fromObservable,  fromEventObservable} from \"xstate\";\nimport { percentage, minutes, seconds } from \"./utils\";\nimport {Logger, ConsoleLogger} from 'react-console-logger';\nimport { interval, Subscribable, fromEvent } from \"rxjs\";\nimport { useRef } from 'react';\nimport { map, take } from 'rxjs/operators';\n\n\nimport \"./reset.css\";\nimport \"./App.css\";\n\n\nconst pino = require(\"pino\");\nconst logger = pino({\n  transport: {\n    target: \"pino-pretty\",\n  },\n});\n\nlogger.info('Hello World');\n\nconst myLogger = new Logger();\n  \nconst IntervalComponent = () => {\n  const intervalId = useRef(null);\n};\n\n/**\n * Video State Machine\n */\n\n\n\nconst videoMachine = setup({\n  types:{},\n  \n  actions:{\n    \n    setVideo :  \n       assign({\n        video: ({event}) => event.video,\n        duration: ({event}) => event.video.duration\n      }),\n    \n    \n    setElapsed : assign({\n      elapsed: ({context, _event}) => context.video.currentTime,\n    }),\n    \n    setTime : assign({\n      elapsed: ({context, _event}) => context.video.currentTime\n    }),\n\n    playVideo : ({context, _event}) => {\n      context.video.play();\n      myLogger.info(\"Reproduciendo video \");\n    },\n\n    logAction : ({context, _event}) => {\n      myLogger.info(\"Preparando video \");\n    },\n    \n    pauseVideo : ({context, _event}) => {\n      context.video.pause();\n    },\n\n    progressVideo : ({context, _event}) => {\n      myLogger.warn(\"Avance:\"+context.avance);\n    },\n\n    setAvance : assign({\n      avance: ({context, _event}) => Math.floor((context.video.currentTime/context.video.duration)*100),\n    }),\n\n    setObsAvance : ({context, _event}) => {\n      myLogger.warn(interval(context.avance, 3000));\n    },\n\n    \n    restartVideo : ({context, _event}) => {\n      context.video.currentTime = 0;\n      context.video.play();\n      context.video.numVideos = context.video.numVideos +1;\n    },\n\n    setNumVideos : ({context, _event}) => {\n      context.video.numVideos = context.video.numVideos +1;\n    },\n\n    },\n    guards:{},\n    delays:{},\n    actors:{\n      iniciador: fromCallback(({sendBack, receive}) => {\n        receive(event => {\n          if (event.type === 'setVideo') {\n            sendBack({type:\"setVideo\"})\n          }\n          else if (event.type === 'setNumVideos') {\n            sendBack({type:\"setNumVideos\"})\n          } \n        })\n           \n      }),\n\n      iniciadorIntervalo :  fromPromise(({sendBack, receive}) => {\n        // Start the ticks activity\n        const interval = setInterval(() => {\n        //console.log(event); // this is the activity instance, not the event\n        // I need access to the event that triggered the transition to this activity's state (RUN)\n        console.log('TICK!')\n        }, 1000);\n        // Return a function that stops the ticks activity\n      return () => clearInterval(interval);\n      }),\n\n      sendEmail: fromPromise(async ({ input }) => {\n        console.log('Sending email to', input.userId);        \n        //const user = await fetchEmail(input.userId);  \n        return \"exito\";\n      }),\n      \n      intervalLogic : fromObservable(() => interval(1000)),\n     \n}\n})\n.createMachine({\n  id: \"video\",\n  initial: \"loading\",\n\n  context: {\n    video: null,\n    duration: 0,\n    elapsed: 0, \n    numVideos:0,\n    avance:0,\n    myInterval: 5000,\n    intervalId : null,\n    userId: \"amiguel777@gmail.com\",\n    observador:\"vacio\"\n  },\n\n  states: {     \n    \n    loading: { \n      invoke: {\n        src: 'sendEmail',\n        input: ({ context: { userId } }) => ({ userId }),        \n      },       \n      \n      on: {\n\n          \"control.boton.oprime.setObservador\":{\n            actions: assign({\n              observa:({event}) => {return interval(event.observa);}})\n          },\n\n          \"control.boton.oprime.ready\": {\n            target: [\"ready\"],\n            actions: [\"setVideo\", \"logAction\"]\n          },\n          FAIL: \"failure\"\n      }\n    },\n    \n    ready: {\n      \n      initial: \"paused\",\n      states: {\n        paused: {\n          entry: {\n            type: \"setElapsed\",\n          },\n          exit: {\n            type: \"playVideo\",\n          },\n          on: {\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: []\n            }\n          }\n        },\n        playing: {              \n\n             \n          \n          entry: {\n            type: \"setElapsed\",\n          },\n          exit: {\n            type: \"pauseVideo\",\n          },\n          on: {\n            COUNT: { actions: 'notifyCount' },\n            TIMING: {\n              target: \"playing\",\n              actions: [\"setElapsed\", \"setAvance\", \"progressVideo\"]\n            },\n            \"control.boton.oprime.pause\": {\n              target: \"paused\",\n              actions: []\n            },\n            \"control.boton.oprime.stop\": \"ended\"\n          }\n        },\n        ended: {\n          invoke: {\n            src: \"iniciador\",             \n          },  \n          on: {\n            \"setNumVideos\":{\n              actions:sendTo(\"iniciador\", ({event}) =>({\n                type:\"setNumVideos\",\n              }))\n            },\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: \"restartVideo\"\n            }\n          }\n        }\n      }\n    },\n        \n    failure: {\n      type: \"final\"\n    }\n  },\n\n});\n\n\n\nconst observadorActor = createActor(videoMachine);\n\n\n\n// Observer as an object\nconst subscription = observadorActor.subscribe(snapshot => {\n    console.log('Estado', snapshot);\n    //localStorage.setItem('state-key', JSON.stringify(snapshot))\n  }\n);\n\nobservadorActor.start();\n\nobservadorActor.send({\n  type:\"control.boton.oprime.setObservador\",\n  observa: 10000,  \n})\n\n/**\n * Components\n */\n\nexport default function App() {\n  const ref = React.useRef(null);\n  const [current, send] = useMachine(videoMachine);\n  const { duration, elapsed, avance } = current.context;\n  \n  \n\n  \n  return (\n    <div className=\"container\">\n      <video\n        ref={ref}\n        onCanPlay={() => {\n          send({type:\"control.boton.oprime.ready\",  video: ref.current });\n        }}\n        onTimeUpdate={() => {\n          send({type:\"TIMING\",  video: ref.current});\n        }}\n        onEnded={() => {\n          send({type:\"control.boton.oprime.stop\"});\n        }}\n        onError={() => {\n          send({type:\"FAIL\"});\n        }}\n      >\n        <source src=\"/fox.mp4\" type=\"video/mp4\" />\n      </video>\n\n      {[\"paused\", \"playing\", \"ended\"].some(subState =>\n        current.matches({ ready: subState })\n      ) && (\n        <div>\n          <ElapsedBar elapsed={elapsed} duration={duration} />\n          <Buttons current={current} send={send} />\n          <Timer elapsed={elapsed} duration={duration} avance = {avance} />\n          <ButtonObservador current={current} send={send} />\n      </div>\n\n        \n      )}\n\n      <div>\n        <ConsoleLogger   logger={myLogger} />\n      </div>\n    </div>\n  );\n}\n\nconst Buttons = ({ current, send }) => {\n  if (current.matches({ ready: \"playing\" })) {\n    return (\n      <button\n        onClick={() => {\n          send({type:\"control.boton.oprime.pause\"});\n        }}\n      >\n        Pause\n      </button>\n    );\n  }\n\n  return (\n    <button style={{backgroundColor: '#DDD'}}\n      onClick={() => {\n        send({type:\"control.boton.oprime.play\"});\n      }}\n    >\n      Play\n    </button>\n  );\n};\n\n\nconst ButtonObservador = ({ current, send }) => {\n  if (current.matches({ ready: \"observando\" })) {\n    return (\n      <button  style={{backgroundColor: '#CCC'}}\n        onClick={() => {\n          send({type:\"control.boton.oprime.setObservador\"});\n        }}\n      >\n        No Observar\n      </button>\n    );\n  }\n\n  return (\n    <button style={{backgroundColor: '#AAA'}}\n      onClick={() => {\n        send({type:\"control.boton.oprime.unsetObservador\"});\n      }}\n    >\n      Observar\n    </button>\n  );\n};\n\n\nconst ElapsedBar = ({ elapsed, duration }) => (\n  <div className=\"elapsed\">\n    <div\n      className=\"elapsed-bar\"\n      style={{ width: `${percentage(duration, elapsed)}%` }}\n    />\n  </div>\n);\n\nconst Timer = ({ elapsed, duration }) => (\n  <span className=\"timer\">\n    {minutes(elapsed)}:{seconds(elapsed)} of {minutes(duration)}:\n    {seconds(duration)}\n  </span>\n);\n     "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}