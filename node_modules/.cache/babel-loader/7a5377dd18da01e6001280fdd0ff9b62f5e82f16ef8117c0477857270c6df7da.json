{"ast":null,"code":"var _jsxFileName = \"C:\\\\PoC-FE\\\\video-fsm-uno\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { assign, createActor, createMachine, fromCallback, fromTransition, setup, sendTo } from \"xstate\";\nimport { percentage, minutes, seconds } from \"./utils\";\nimport { Logger, ConsoleLogger } from 'react-console-logger';\nimport \"./reset.css\";\nimport \"./App.css\";\n\n/**\n * Video State Machine\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoMachine = setup({\n  types: {},\n  actions: {\n    setVideo: assign({\n      video: ({\n        event\n      }) => event.video,\n      duration: ({\n        event\n      }) => event.video.duration\n    }),\n    setElapsed: assign({\n      elapsed: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    setTime: assign({\n      elapsed: ({\n        context,\n        _event\n      }) => context.video.currentTime\n    }),\n    playVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.play();\n    },\n    pauseVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.pause();\n    },\n    restartVideo: ({\n      context,\n      _event\n    }) => {\n      context.video.currentTime = 0;\n      context.video.play();\n      context.video.numVideos = context.video.numVideos + 1;\n    },\n    setNumVideos: ({\n      context,\n      _event\n    }) => {\n      context.video.numVideos = context.video.numVideos + 1;\n    }\n  },\n  guards: {},\n  delays: {},\n  actors: {\n    iniciador: fromCallback(({\n      sendBack,\n      receive\n    }) => {\n      receive(event => {\n        if (event.type === 'setVideo') {\n          sendBack({\n            type: \"setVideo\"\n          });\n        } else if (event.type === 'setNumVideos') {\n          sendBack({\n            type: \"setNumVideos\"\n          });\n        }\n      });\n    })\n  }\n}).createMachine({\n  id: \"video\",\n  initial: \"loading\",\n  context: {\n    video: null,\n    duration: 0,\n    elapsed: 0,\n    numVideos: 0\n  },\n  states: {\n    loading: {\n      invoke: {\n        id: \"observador\",\n        src: \"iniciador\"\n      },\n      on: {\n        \"control.boton.oprime.ready\": {\n          target: \"ready\",\n          actions: [\"setVideo\"]\n        },\n        FAIL: \"failure\"\n      }\n    },\n    ready: {\n      initial: \"paused\",\n      states: {\n        paused: {\n          entry: {\n            type: \"setElapsed\"\n          },\n          exit: {\n            type: \"playVideo\"\n          },\n          on: {\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: []\n            }\n          }\n        },\n        playing: {\n          entry: {\n            type: \"setElapsed\"\n          },\n          exit: {\n            type: \"pauseVideo\"\n          },\n          on: {\n            TIMING: {\n              target: \"playing\",\n              actions: \"setElapsed\"\n            },\n            \"control.boton.oprime.pause\": {\n              target: \"paused\",\n              actions: []\n            },\n            \"control.boton.oprime.stop\": \"ended\"\n          }\n        },\n        ended: {\n          invoke: {\n            id: \"observador\",\n            src: \"iniciador\"\n          },\n          on: {\n            \"setNumVideos\": {\n              actions: sendTo(\"iniciador\", ({\n                event\n              }) => ({\n                type: \"setNumVideos\"\n              }))\n            },\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: \"restartVideo\"\n            }\n          }\n        }\n      }\n    },\n    failure: {\n      type: \"final\"\n    }\n  }\n});\n\n/**\n * Components\n */\n\nexport default function App() {\n  _s();\n  const ref = React.useRef(null);\n  const [current, send] = useMachine(videoMachine);\n  const {\n    duration,\n    elapsed\n  } = current.context;\n  const myLogger = new Logger();\n  myLogger.log('log');\n  mylogger.info('info');\n  mylogger.warn('warn');\n  mylogger.error('error');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: ref,\n      onCanPlay: () => {\n        send({\n          type: \"control.boton.oprime.ready\",\n          video: ref.current\n        });\n      },\n      onTimeUpdate: () => {\n        send({\n          type: \"TIMING\",\n          video: ref.current\n        });\n      },\n      onEnded: () => {\n        send({\n          type: \"control.boton.oprime.stop\"\n        });\n      },\n      onError: () => {\n        send({\n          type: \"FAIL\"\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/fox.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), [\"paused\", \"playing\", \"ended\"].some(subState => current.matches({\n      ready: subState\n    })) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ElapsedBar, {\n        elapsed: elapsed,\n        duration: duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        current: current,\n        send: send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        elapsed: elapsed,\n        duration: duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ConsoleLogger, {\n        logger: myLogger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3LXRPWXwUMZXMKghCEkhhYkSV3E=\", false, function () {\n  return [useMachine];\n});\n_c = App;\nconst Buttons = ({\n  current,\n  send\n}) => {\n  if (current.matches({\n    ready: \"playing\"\n  })) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        send({\n          type: \"control.boton.oprime.pause\"\n        });\n      },\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      send({\n        type: \"control.boton.oprime.play\"\n      });\n    },\n    children: \"Play\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Buttons;\nconst ElapsedBar = ({\n  elapsed,\n  duration\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"elapsed\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elapsed-bar\",\n    style: {\n      width: `${percentage(duration, elapsed)}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 236,\n  columnNumber: 3\n}, this);\n_c3 = ElapsedBar;\nconst Timer = ({\n  elapsed,\n  duration\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"timer\",\n  children: [minutes(elapsed), \":\", seconds(elapsed), \" of \", minutes(duration), \":\", seconds(duration)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 245,\n  columnNumber: 3\n}, this);\n_c4 = Timer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Buttons\");\n$RefreshReg$(_c3, \"ElapsedBar\");\n$RefreshReg$(_c4, \"Timer\");","map":{"version":3,"names":["React","useMachine","assign","createActor","createMachine","fromCallback","fromTransition","setup","sendTo","percentage","minutes","seconds","Logger","ConsoleLogger","jsxDEV","_jsxDEV","videoMachine","types","actions","setVideo","video","event","duration","setElapsed","elapsed","context","_event","currentTime","setTime","playVideo","play","pauseVideo","pause","restartVideo","numVideos","setNumVideos","guards","delays","actors","iniciador","sendBack","receive","type","id","initial","states","loading","invoke","src","on","target","FAIL","ready","paused","entry","exit","playing","TIMING","ended","failure","App","_s","ref","useRef","current","send","myLogger","log","mylogger","info","warn","error","className","children","onCanPlay","onTimeUpdate","onEnded","onError","fileName","_jsxFileName","lineNumber","columnNumber","some","subState","matches","ElapsedBar","Buttons","Timer","logger","_c","onClick","_c2","style","width","_c3","_c4","$RefreshReg$"],"sources":["C:/PoC-FE/video-fsm-uno/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { assign, createActor, createMachine, fromCallback, fromTransition, setup, sendTo } from \"xstate\";\nimport { percentage, minutes, seconds } from \"./utils\";\nimport {Logger, ConsoleLogger} from 'react-console-logger';\n\n\n\nimport \"./reset.css\";\nimport \"./App.css\";\n\n/**\n * Video State Machine\n */\n\n\n\nconst videoMachine = setup({\n  types:{},\n  actions:{\n    setVideo : assign({\n      video: ({event}) => event.video,\n      duration: ({event}) => event.video.duration\n    }),\n    \n    setElapsed : assign({\n      elapsed: ({context, _event}) => context.video.currentTime\n    }),\n    \n    setTime : assign({\n      elapsed: ({context, _event}) => context.video.currentTime\n    }),\n\n    playVideo : ({context, _event}) => {\n      context.video.play();\n    },\n    \n    pauseVideo : ({context, _event}) => {\n      context.video.pause();\n    },\n    \n    restartVideo : ({context, _event}) => {\n      context.video.currentTime = 0;\n      context.video.play();\n      context.video.numVideos = context.video.numVideos +1;\n    },\n\n    setNumVideos : ({context, _event}) => {\n      context.video.numVideos = context.video.numVideos +1;\n    },\n\n    },\n    guards:{},\n    delays:{},\n    actors:{\n      iniciador: fromCallback(({sendBack, receive}) => {\n        receive(event => {\n          if (event.type === 'setVideo') {\n            sendBack({type:\"setVideo\"})\n          }\n          else if (event.type === 'setNumVideos') {\n            sendBack({type:\"setNumVideos\"})\n          } \n        })\n           \n      }),\n    }\n})\n.createMachine({\n  id: \"video\",\n  initial: \"loading\",\n\n  context: {\n    video: null,\n    duration: 0,\n    elapsed: 0, \n    numVideos:0\n  },\n\n  states: {\n    loading: {\n      invoke: {\n        id:\"observador\",\n        src: \"iniciador\",\n      },      \n      on: {\n        \"control.boton.oprime.ready\": {\n          target: \"ready\",\n          actions: [\"setVideo\"]\n        },\n        FAIL: \"failure\"\n      }\n    },\n    ready: {\n      initial: \"paused\",\n      states: {\n        paused: {\n          entry: {\n            type: \"setElapsed\",\n          },\n          exit: {\n            type: \"playVideo\",\n          },\n          on: {\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: []\n            }\n          }\n        },\n        playing: {\n          entry: {\n            type: \"setElapsed\",\n          },\n          exit: {\n            type: \"pauseVideo\",\n          },\n          on: {\n            TIMING: {\n              target: \"playing\",\n              actions: \"setElapsed\"\n            },\n            \"control.boton.oprime.pause\": {\n              target: \"paused\",\n              actions: []\n            },\n            \"control.boton.oprime.stop\": \"ended\"\n          }\n        },\n        ended: {\n          invoke: {\n            id:\"observador\",\n            src: \"iniciador\",             \n          },  \n          on: {\n            \"setNumVideos\":{\n              actions:sendTo(\"iniciador\", ({event}) =>({\n                type:\"setNumVideos\",\n              }))\n            },\n            \"control.boton.oprime.play\": {\n              target: \"playing\",\n              actions: \"restartVideo\"\n            }\n          }\n        }\n      }\n    },\n    failure: {\n      type: \"final\"\n    }\n  }\n});\n\n\n/**\n * Components\n */\n\nexport default function App() {\n  const ref = React.useRef(null);\n  const [current, send] = useMachine(videoMachine);\n  const { duration, elapsed } = current.context;\n  \n  const myLogger = new Logger();\n  \n  myLogger.log('log');\n  mylogger.info('info');\n  mylogger.warn('warn');\n  mylogger.error('error');\n  \n  return (\n    <div className=\"container\">\n      <video\n        ref={ref}\n        onCanPlay={() => {\n          send({type:\"control.boton.oprime.ready\",  video: ref.current });\n        }}\n        onTimeUpdate={() => {\n          send({type:\"TIMING\",  video: ref.current});\n        }}\n        onEnded={() => {\n          send({type:\"control.boton.oprime.stop\"});\n        }}\n        onError={() => {\n          send({type:\"FAIL\"});\n        }}\n      >\n        <source src=\"/fox.mp4\" type=\"video/mp4\" />\n      </video>\n\n      {[\"paused\", \"playing\", \"ended\"].some(subState =>\n        current.matches({ ready: subState })\n      ) && (\n        <div>\n          <ElapsedBar elapsed={elapsed} duration={duration} />\n          <Buttons current={current} send={send} />\n          <Timer elapsed={elapsed} duration={duration} />\n        </div>\n\n        \n      )}\n\n      <div>\n        <ConsoleLogger   logger={myLogger} />\n      </div>\n    </div>\n  );\n}\n\nconst Buttons = ({ current, send }) => {\n  if (current.matches({ ready: \"playing\" })) {\n    return (\n      <button\n        onClick={() => {\n          send({type:\"control.boton.oprime.pause\"});\n        }}\n      >\n        Pause\n      </button>\n    );\n  }\n\n  return (\n    <button\n      onClick={() => {\n        send({type:\"control.boton.oprime.play\"});\n      }}\n    >\n      Play\n    </button>\n  );\n};\n\nconst ElapsedBar = ({ elapsed, duration }) => (\n  <div className=\"elapsed\">\n    <div\n      className=\"elapsed-bar\"\n      style={{ width: `${percentage(duration, elapsed)}%` }}\n    />\n  </div>\n);\n\nconst Timer = ({ elapsed, duration }) => (\n  <span className=\"timer\">\n    {minutes(elapsed)}:{seconds(elapsed)} of {minutes(duration)}:\n    {seconds(duration)}\n  </span>\n);\n     "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}