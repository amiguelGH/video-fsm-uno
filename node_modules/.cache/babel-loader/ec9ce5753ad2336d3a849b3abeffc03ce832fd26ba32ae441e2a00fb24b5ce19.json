{"ast":null,"code":"import * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { toObserver, createActor } from 'xstate';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\nfunction useIdleActorRef(logic, options) {\n  let [[currentConfig, actorRef], setCurrent] = useState(() => {\n    const actorRef = createActor(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = createActor(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  useIsomorphicLayoutEffect(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, options = {}, observerOrListener) {\n  const actorRef = useIdleActorRef(machine, options);\n  useEffect(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe(toObserver(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\nfunction useActor(logic, options = {}) {\n  if (!!logic && 'send' in logic && typeof logic.send === 'function') {\n    throw new Error(`useActor() expects actor logic (e.g. a machine), but received an ActorRef. Use the useSelector(actorRef, ...) hook instead to read the ActorRef's snapshot.`);\n  }\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = useCallback(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = useCallback(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = useCallback(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = useCallback(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/React.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/React.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = React.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n/**\n * @alias useActor\n */\nfunction useMachine(machine, options = {}) {\n  return useActor(machine, options);\n}\nexport { createActorContext, shallowEqual, useActor, useActorRef, useMachine, useSelector };","map":{"version":3,"names":["React","useEffect","useState","useCallback","useSyncExternalStore","useIsomorphicLayoutEffect","toObserver","createActor","useSyncExternalStoreWithSelector","forEachActor","actorRef","callback","children","getSnapshot","Object","values","forEach","child","stopRootWithRehydration","persistedSnapshots","ref","push","observers","Set","systemSnapshot","system","stop","_snapshot","snapshot","_processingStatus","useIdleActorRef","logic","options","currentConfig","setCurrent","config","newActorRef","getPersistedSnapshot","__unsafeAllowInlineActors","implementations","useActorRef","machine","observerOrListener","sub","subscribe","unsubscribe","start","useActor","send","Error","handleStoreChange","actorSnapshot","defaultCompare","a","b","useSelector","actor","selector","compare","boundGetSnapshot","selectedSnapshot","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","length","i","prototype","hasOwnProperty","call","createActorContext","actorLogic","actorOptions","ReactContext","createContext","OriginalProvider","Provider","providedLogic","providedOptions","createElement","value","displayName","useContext","useSelector$1","useMachine"],"sources":["C:/PoC-FE/video-fsm-uno/node_modules/@xstate/react/dist/xstate-react.development.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { toObserver, createActor } from 'xstate';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\n\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\n\nfunction useIdleActorRef(logic, options) {\n  let [[currentConfig, actorRef], setCurrent] = useState(() => {\n    const actorRef = createActor(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = createActor(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  useIsomorphicLayoutEffect(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, options = {}, observerOrListener) {\n  const actorRef = useIdleActorRef(machine, options);\n  useEffect(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe(toObserver(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\n\nfunction useActor(logic, options = {}) {\n  if (!!logic && 'send' in logic && typeof logic.send === 'function') {\n    throw new Error(`useActor() expects actor logic (e.g. a machine), but received an ActorRef. Use the useSelector(actorRef, ...) hook instead to read the ActorRef's snapshot.`);\n  }\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = useCallback(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = useCallback(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = useCallback(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = useCallback(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/React.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/React.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = React.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n/**\n * @alias useActor\n */\nfunction useMachine(machine, options = {}) {\n  return useActor(machine, options);\n}\n\nexport { createActorContext, shallowEqual, useActor, useActorRef, useMachine, useSelector };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}